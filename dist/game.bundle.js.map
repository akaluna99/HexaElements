{"version":3,"sources":["webpack:///./src/game/assets/tileset.png","webpack:///./src/game/assets/ficha_1.png","webpack:///./src/game/assets/ficha_2.png","webpack:///./src/game/assets/ficha_3.png","webpack:///./src/game/assets/ficha_4.png","webpack:///./src/game/assets/flip.png","webpack:///./src/game/assets/overlay.png","webpack:///./src/game/assets/overlay2.png","webpack:///./src/game/assets/fondo_titulo.png","webpack:///./src/game/assets/b_jugar.png","webpack:///./src/game/assets/over_dau.png","webpack:///./src/game/assets/game_over.png","webpack:///./src/game/scenes/PlayScene.js","webpack:///./src/game/scenes/BootScene.js","webpack:///./src/game/game.js"],"names":["module","exports","__webpack_require__","p","th","tiles","map","BootScene","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","load","image","tile_set","fitxa_y","fitxa_b","fitxa_r","fitxa_g","flip","overlay","overlay2","fondo","boton_jugar","over_dau","game_over","add","setOrigin","boto1","sprite","setInteractive","setScale","on","pointer","scene","start","clearTint","setTint","Scene","height","width","nomJugadors","taula_dany","element","nJugadors","fitxesSprite","fitxes","taulerAmplada","taulerAlcada","tauler","casellaPosible","cruzeta","viu","midaTile","jugadorAct","puntuacio","potMoure","overTirar","coordenades","x","y","PlayScene","i","nDau","console","log","j","push","Phaser","Math","Between","make","tilemap","data","tileWidth","tileHeight","addTilesetImage","createStaticLayer","in_jugador","mostra_dau","input","posicio","spriteMoure","nouPosX","nouPosY","casellaX","casellaY","posXraw","posYraw","posClickXraw","posClickYraw","numDau","posClickX","floor","posClickY","posX","posY","pot","pot_moure","setDepth","casellaTauler","calcula_dany","seg_jugador","tira_dau","tipus","nouSprite","dibuixa_overlay","scaleX","scaleY","arguments","length","undefined","final","destroy","text","fontFamily","fontSize","color","numIteracio","String","posible","posXtauler","posYtauler","over","marca_posible","ultim","vius","ultimViu","pantallaEnd","splash","mata","launch","Game","type","AUTO","pixelArt","parent","d","__webpack_exports__"],"mappings":"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","file":"game.bundle.js","sourcesContent":["module.exports = __webpack_public_path__ + \"images/tileset.png\";","module.exports = __webpack_public_path__ + \"images/ficha_1.png\";","module.exports = __webpack_public_path__ + \"images/ficha_2.png\";","module.exports = __webpack_public_path__ + \"images/ficha_3.png\";","module.exports = __webpack_public_path__ + \"images/ficha_4.png\";","module.exports = __webpack_public_path__ + \"images/flip.png\";","module.exports = __webpack_public_path__ + \"images/overlay.png\";","module.exports = __webpack_public_path__ + \"images/overlay2.png\";","module.exports = __webpack_public_path__ + \"images/fondo_titulo.png\";","module.exports = __webpack_public_path__ + \"images/b_jugar.png\";","module.exports = __webpack_public_path__ + \"images/over_dau.png\";","module.exports = __webpack_public_path__ + \"images/game_over.png\";","import { Scene } from 'phaser';\r\nlet height = 576;\r\nlet width = 960;\r\nlet nomJugadors = [\"GROC\", \"BLAU\", \"VERMELL\", \"VERD\"];\r\n//TAULA DANY Jugador amb (terra, aigua, aire, foc)\r\nlet taula_dany = [[0, 5, -5, 1], //Jugador Terra\r\n                  [-5, 0, 1, 5], //Jugador Aigua\r\n                  [5, 1, 0, -5], //Jugador Aire\r\n                  [1, -5, 5, 0]];  //Jugador Foc\r\nlet TERRA = 0;\r\nlet AIGUA = 1;\r\nlet AIRE = 2;\r\nlet FOC = 3;\r\nlet element = [\"TERRA\", \"AIGUA\", \"AIRE\", \"FOC\"];\r\nlet th;\r\nlet nJugadors = 4;\r\nlet fitxesSprite = [];\r\nlet fitxes = [];\r\nlet taulerAmplada = 15\r\nlet taulerAlcada = 9\r\nlet tauler = [];\r\nlet tiles;\r\nlet layer;\r\nlet map;\r\n\r\nlet casellaPosible = [];\r\nlet cruzeta = [];\r\nlet viu = []\r\n\r\nlet midaTile = 64;\r\nlet jugadorAct = 0;\r\nlet puntuacio = [];\r\nlet potMoure = false;\r\nlet overTirar = [];\r\n\r\nfunction coordenades(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n}\r\n\r\nexport default class PlayScene extends Scene {\r\n  constructor () {\r\n    super({ key: 'PlayScene' });\r\n  }\r\n\r\n  create () {\r\n    console.log(\"Starting PlayScene ...\");\r\n    //let i = this.add.image(400, 300, 'tile_set');\r\n\t // Load a map from a 2D array of tile indices\r\n   th = this;\r\n\t let i;\r\n   //Crear Tauler\r\n\t for ( i = 0; i < taulerAlcada; i ++){\r\n\t\t let j;\r\n\t\t tauler[i] = [];\r\n\t\t for ( j = 0; j <  taulerAmplada; j ++){\r\n\t\t\ttauler[i].push(Phaser.Math.Between(0, 3));\r\n\t\t\tif ( i == 0 || i == taulerAlcada - 1){\r\n\t\t\t\ttauler[i][j] = 5;\r\n\t\t\t}\r\n\t\t }\r\n\t }\r\n   //Caselles Posibles\r\n   for ( i = 0; i <= taulerAmplada; i++) {\r\n     casellaPosible[i] = [];\r\n     let j;\r\n     for ( j = 0; j < taulerAmplada; j ++){\r\n       casellaPosible[i].push(true);\r\n       if ( j == 1 || j == taulerAlcada){\r\n         casellaPosible[i][j] = false;\r\n \t\t\t}\r\n     }\r\n   }\r\n\t tauler[0][0] = 4;\r\n\t tauler[0][taulerAmplada - 1] = 4;\r\n\t tauler[taulerAlcada - 1][0] = 4;\r\n\t tauler[taulerAlcada - 1][taulerAmplada - 1] = 4;\r\n\r\n   fitxes.push(new coordenades(0, 0));\r\n   fitxes.push(new coordenades(0, taulerAmplada - 1));\r\n   fitxes.push(new coordenades(taulerAlcada - 1, 0));\r\n   fitxes.push(new coordenades(taulerAlcada - 1, taulerAmplada -1));\r\n\r\n\t// When loading from an array, make sure to specify the tileWidth and tileHeight\r\n\tmap = this.make.tilemap({ data: tauler, tileWidth: midaTile, tileHeight: midaTile });\r\n\ttiles = map.addTilesetImage('tile_set');\r\n\tlayer = map.createStaticLayer(0, tiles);\r\n\r\n  //Crea els sprites de jugadors\r\n  for (i = 0; i < nJugadors; i++) {\r\n    var nouSprite;\r\n    switch (i) {\r\n      case 0:\r\n        in_jugador(midaTile, midaTile, 'fitxa_g');\r\n        break;\r\n      case 1:\r\n        in_jugador(taulerAmplada * midaTile, midaTile, 'fitxa_b');\r\n        break;\r\n      case 2:\r\n        in_jugador(midaTile, taulerAlcada * midaTile, 'fitxa_y');\r\n        break;\r\n      case 3:\r\n        in_jugador(taulerAmplada * midaTile, taulerAlcada * midaTile, 'fitxa_r');\r\n        break;\r\n    }\r\n  }\r\n  var nDau;\r\n  mostra_dau();\r\n  this.input.on('pointerdown', function (pointer) {\r\n      if (potMoure){\r\n        if (pot_moure(fitxesSprite[jugadorAct].x, fitxesSprite[jugadorAct].y, pointer.x, pointer.y, nDau)){\r\n          mou(jugadorAct, pointer);\r\n        }\r\n      }\r\n      else{\r\n        nDau = tira_dau();\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  update () {\r\n\r\n  }\r\n\r\n}\r\n\r\n  function in_jugador(posX, posY, tipus){\r\n    var nouSprite = th.add.image(posX, posY, tipus);\r\n    nouSprite.setScale(.25);\r\n    nouSprite.setOrigin(1);\r\n    fitxesSprite.push(nouSprite);\r\n    puntuacio.push(0);\r\n    viu.push(true);\r\n  }\r\n\r\n  function seg_jugador(){\r\n    jugadorAct += 1;\r\n    while ((jugadorAct >= nJugadors) || (!viu[jugadorAct])) {\r\n      jugadorAct += 1\r\n      if (jugadorAct >= nJugadors) {\r\n        jugadorAct = 0;\r\n      }\r\n    }\r\n    console.log(\"JUGADRO ACTUAL \" + element[jugadorAct]);\r\n  }\r\n\r\n  function mou (jugador, posicio) {\r\n    var spriteMoure = fitxesSprite[jugador]\r\n    var nouPosX = (Math.floor(posicio.x / midaTile) + 1);\r\n    var nouPosY = (Math.floor(posicio.y / midaTile) + 1);\r\n    if ( casellaPosible[nouPosX][nouPosY] ) {\r\n      casellaPosible[nouPosX][nouPosY] = false;\r\n      flip_casella(nouPosX * midaTile, nouPosY * midaTile);\r\n      calcula_dany(nouPosX, nouPosY);\r\n      spriteMoure.x = nouPosX * midaTile;\r\n      spriteMoure.y = nouPosY * midaTile;\r\n      spriteMoure.setDepth(1);\r\n      seg_jugador();\r\n      mostra_dau();\r\n    }\r\n  }\r\n\r\n  function flip_casella (casellaX, casellaY) {\r\n    th.add.image(casellaX - midaTile / 2, casellaY - midaTile / 2 , 'flip').setDepth(0);\r\n  }\r\n\r\n  function marca_posible(casellaX, casellaY, numDau = 3, numIteracio = 1) {\r\n    var posible = false;\r\n    var posXtauler = (Math.floor(casellaX / midaTile));\r\n    var posYtauler = (Math.floor(casellaY / midaTile));\r\n    for (var i = 0; i < cruzeta.length; i++) {\r\n      cruzeta[i].destroy();\r\n    }\r\n    //MARCA LA CASELLA\r\n    var over = th.add.image(casellaX, casellaY, 'overlay');\r\n    over.setOrigin(1);\r\n    over.setScale(1)\r\n    cruzeta.push(over);\r\n\r\n    //MOVIMENT POSIBLE VERTICAL ADALT\r\n    if (posYtauler - numDau > 1 && casellaPosible[posXtauler][posYtauler - numDau]){ // FUNCIONA\r\n      dibuixa_overlay(casellaX, casellaY - midaTile, 1, numDau, false);\r\n      posible = true;\r\n    }\r\n    //MOVIMENT POSIBLE VERTICAL ABAIX\r\n    if (posYtauler + numDau < taulerAlcada && casellaPosible[posXtauler][posYtauler + numDau]){ //FUNCIONA\r\n      dibuixa_overlay(casellaX, casellaY + (numDau * midaTile), 1, numDau);\r\n      posible = true;\r\n    }\r\n    //MOVIMENT POSIBLE HORITZONTAL ESQUERRA\r\n    if (posXtauler - numDau > 0 && casellaPosible[posXtauler - numDau][posYtauler]){\r\n      dibuixa_overlay(casellaX - midaTile, casellaY, numDau, 1, false);\r\n      posible = true;\r\n    }\r\n    //MOVIMENT POSIBLE HORITZONTAL DRETA\r\n    if (posXtauler + numDau <= taulerAmplada && casellaPosible[posXtauler + numDau][posYtauler]){\r\n      dibuixa_overlay(casellaX + (midaTile * numDau), casellaY, numDau);\r\n      posible = true;\r\n    }\r\n    if (!posible) {\r\n      tira_dau(numIteracio + 1);\r\n    }\r\n}\r\n\r\n  function dibuixa_overlay(posX, posY, scaleX, scaleY = 1, final = true){\r\n    var overlay = th.add.image(posX, posY, 'overlay');\r\n    overlay.setScale(scaleX, scaleY);\r\n    overlay.setOrigin(1);\r\n    cruzeta.push(overlay);\r\n    if (final){\r\n      cruzeta.push(th.add.image(posX, posY, 'overlay2').setOrigin(1));\r\n    }\r\n    else {\r\n      cruzeta.push(th.add.image(posX - (midaTile * (scaleX - 1)), posY - (midaTile * (scaleY - 1)), 'overlay2').setOrigin(1));\r\n    }\r\n  }\r\n\r\n  function mostra_dau(){\r\n    for (var i = 0; i < overTirar.length; i++) {\r\n      overTirar[i].destroy();\r\n    }\r\n    potMoure = false;\r\n    overTirar.push(th.add.image(0, 0, 'over_dau').setOrigin(0).setDepth(2));\r\n    var text = \"Turn del jugador \" + element[jugadorAct];\r\n    overTirar.push(th.add.text(width / 2, 100, text, { fontFamily: 'Arial', fontSize: 64, color: '#ffffff' }).setOrigin(0.5).setDepth(3));\r\n  }\r\n\r\n  function tira_dau(numIteracio = 0){\r\n    var numDau = Phaser.Math.Between(1, 6);\r\n    if (numIteracio){\r\n      numDau = numIteracio;\r\n    }\r\n    for (var i = 0; i < overTirar.length; i++) {\r\n      overTirar[i].destroy();\r\n    }\r\n    var text = \"Et pots moure \" + String(numDau) + \" caselles\";\r\n    overTirar.push(th.add.text(width / 2, midaTile / 2, text, { fontFamily: 'Arial', fontSize: 20, color: '#000000' }).setOrigin(0.5));\r\n    potMoure = true;\r\n    if (numIteracio == 7){\r\n      mata();\r\n    }\r\n    else{\r\n      marca_posible(fitxesSprite[jugadorAct].x, fitxesSprite[jugadorAct].y, numDau, numIteracio);\r\n      return numDau;\r\n    }\r\n  }\r\n\r\n  function mata(){\r\n    overTirar.push(th.add.text(width / 2, height / 2, \"TAS MUERTO Jugador \" + nomJugadors[jugadorAct], { fontFamily: 'Arial', fontSize: 50, color: '#000000' }).setOrigin(0.5));\r\n    viu[jugadorAct] = false;\r\n    potMoure = false;\r\n    var vius = 0;\r\n    var ultim;\r\n    console.log(\"SIGUEN VISU\");\r\n    for (var i = 0; i < viu.length; i++) {\r\n      if (viu[i]){\r\n        console.log(nomJugadors[i]);\r\n        ultim = i;\r\n        vius += 1;\r\n      }\r\n    }\r\n    if (vius < 2){\r\n      game_end(ultim);\r\n    }\r\n    else{\r\n      seg_jugador();\r\n    }\r\n  }\r\n\r\n  function game_end(ultimViu){\r\n    var pantallaEnd = [];\r\n    var splash = th.add.image(0, 0, 'game_over').setOrigin(0);\r\n    splash.setDepth(2);\r\n    pantallaEnd.push(splash);\r\n    pantallaEnd.push(th.add.text(width / 2, 243, \"Ha guanyat \" + nomJugadors[ultimViu], { fontFamily: 'Arial', fontSize: 20, color: '#000000' }).setOrigin(0.5));\r\n    pantallaEnd[1].setDepth(3);\r\n  }\r\n\r\n  function pot_moure(posXraw, posYraw, posClickXraw, posClickYraw, numDau){\r\n    var posClickX = (Math.floor(posClickXraw / midaTile) + 1);\r\n    var posClickY = (Math.floor(posClickYraw / midaTile) + 1);\r\n    var posX = (Math.floor(posXraw / midaTile));\r\n    var posY = (Math.floor(posYraw / midaTile));\r\n    var pot = false;\r\n    if (posX + numDau == posClickX && posY == posClickY){\r\n      pot = true;\r\n    }\r\n    if (posX - numDau == posClickX && posY == posClickY){\r\n      pot = true;\r\n    }\r\n    if (posX == posClickX && posY + numDau == posClickY){\r\n      pot = true;\r\n    }\r\n    if (posX == posClickX && posY - numDau == posClickY){\r\n      pot = true;\r\n    }\r\n    return pot;\r\n  }\r\n\r\n  function calcula_dany(posX, posY){\r\n    console.log(posY);\r\n    console.log(posX);\r\n    var casellaTauler = tauler[posY - 1][posX - 1];\r\n    console.log(element[casellaTauler]);\r\n    puntuacio[jugadorAct] += taula_dany[jugadorAct][casellaTauler];\r\n    console.log(puntuacio[jugadorAct]);\r\n  }\r\n","import {Scene} from 'phaser'\r\nimport tile_set from '@/game/assets/tileset.png';\r\n//import tile_fitxes from '@/game/assets/tileset_fichas.png';\r\nimport fitxa_y from '@/game/assets/ficha_1.png';\r\nimport fitxa_b from '@/game/assets/ficha_2.png';\r\nimport fitxa_r from '@/game/assets/ficha_3.png';\r\nimport fitxa_g from '@/game/assets/ficha_4.png';\r\nimport flip from '@/game/assets/flip.png';\r\nimport overlay from '@/game/assets/overlay.png';\r\nimport overlay2 from '@/game/assets/overlay2.png';\r\nimport fondo from '@/game/assets/fondo_titulo.png';\r\nimport boton_jugar from '@/game/assets/b_jugar.png';\r\nimport over_dau from '@/game/assets/over_dau.png';\r\nimport game_over from '@/game/assets/game_over.png';\r\n\r\nexport default class BootScene extends Scene {\r\n    constructor() {\r\n        super({key: 'BootScene'})\r\n    }\r\n\r\n    preload() {\r\n  \t\tthis.load.image('tile_set', tile_set);\r\n\r\n      this.load.image('fitxa_y', fitxa_y);\r\n      this.load.image('fitxa_b', fitxa_b);\r\n      this.load.image('fitxa_r', fitxa_r);\r\n      this.load.image('fitxa_g', fitxa_g);\r\n\r\n      this.load.image('flip', flip);\r\n      this.load.image('overlay', overlay);\r\n      this.load.image('overlay2', overlay2);\r\n      this.load.image('fondo', fondo);\r\n      this.load.image('boton_jugar', boton_jugar);\r\n      this.load.image('over_dau', over_dau);\r\n      this.load.image('game_over', game_over);\r\n      // this.load.audio('thud', ['assets/thud.mp3', 'assets/thud.ogg'])\r\n    }\r\n\r\n    create() {\r\n    this.add.image(0, 0, 'fondo').setOrigin(0);\r\n    var height = 576;\r\n    var width = 960;\r\n\t\tlet boto1 = this.add.sprite(960 / 2, 576 / 2, 'boton_jugar').setInteractive();\r\n    boto1.setScale(0.5);\r\n\t\tlet th = this;\r\n\r\n\t\tboto1.on('pointerdown', function (pointer) {\r\n\t\t\tth.scene.start('PlayScene');\r\n\t\t});\r\n\r\n\t\tboto1.on('pointerout', function (pointer) {\r\n\t\t\tthis.clearTint();\r\n\t\t});\r\n\r\n\t\tboto1.on('pointerover', function (pointer) {\r\n\t\t\tthis.setTint(0xFF7878);\r\n\t\t});\r\n    }\r\n\r\n}\r\n","import Phaser from 'phaser'\r\nimport BootScene from './scenes/BootScene'\r\nimport PlayScene from './scenes/PlayScene'\r\n\r\nfunction launch() {\r\n    new Phaser.Game({\r\n        type: Phaser.AUTO,\r\n        width: 960,\r\n        height: 576,\r\n\t\t//zoom: 0.4,\r\n\t\t    pixelArt: true,\r\n        parent: 'game-container',\r\n        /*physics: {\r\n            default: 'arcade',\r\n            arcade: {\r\n                gravity: {y: 300},\r\n                debug: false\r\n            }\r\n        },*/\r\n        scene: [BootScene, PlayScene]\r\n    })\r\n}\r\n\r\nexport default launch\r\nexport {launch}\r\n"],"sourceRoot":""}